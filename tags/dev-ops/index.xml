<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dev-ops on</title><link>https://yinzhang.win/tags/dev-ops/</link><description>Recent content in dev-ops on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://yinzhang.win/tags/dev-ops/index.xml" rel="self" type="application/rss+xml"/><item><title>unix tools</title><link>https://yinzhang.win/entities/unix-tools/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/entities/unix-tools/</guid><description>Guide 基础但常用的 Unix 工具
磁盘 1 2 # 查看当前路径空间总体占用 du -sh /path/to/know 压缩、解压 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # 分卷压缩 tar czf - test | split -b 1G - test.</description></item><item><title>conda</title><link>https://yinzhang.win/entities/conda/</link><pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/entities/conda/</guid><description>基础配置 1 2 3 4 5 6 7 cat ~/.condarc # 自动启动 conda 环境，设置关闭，防止系统 python 被污染 auto_activate_base: False envs_dirs: - /platform_tech/zhangyin/conda_resource/envs/ pkgs_dirs: - /platform_tech/zhangyin/conda_resource/pkgs/ 常用命令 1 2 3 4 5 6 # 创建环境 conda create -n env_name python=3.</description></item><item><title>rsync</title><link>https://yinzhang.win/entities/rsync/</link><pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/entities/rsync/</guid><description>什么是 rsync 用法 基本复制 1 2 3 4 5 6 7 8 9 rsync -a /source/path /dest/path # 将 src 同步至 dest rsync -a /source1/path /source2/path /dest/path # 将多个 src 同步至 dest -a # 递归同步，并同步元信息（如修改时间、权限），更为常用 -r # 递归同步，不同步元信息 -n # 模拟执行结果 -v # 将执行结果输出至终端 -z # 同步时压缩数据 --delete # 默认情况下，rsync 只同步，而不检查目录是否相同，该参数可以使得目标目录成为原目录的镜像副本，数据删除只发生在目标目录 --append-verify # 断点续传并校验 排除文件 1 2 3 4 5 6 7 8 9 10 11 12 --exclude # 可以指定排除的模式 # 过滤所有 txt 文件 rsync -av --exclude=&amp;#39;*.</description></item><item><title>mixin</title><link>https://yinzhang.win/entities/mixin/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/entities/mixin/</guid><description>CFW 的 mixin 可以实现在机场基础上进一步制定规则。
由于有对更方便的使用 ChatGPT 的需求，不希望频繁切换节点，可以通过 mixin 实现
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 module.</description></item><item><title>shell</title><link>https://yinzhang.win/links/shell/</link><pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/links/shell/</guid><description>本篇 wiki 主要与命令行内容相关
conda rsync unix tools</description></item><item><title>cfw</title><link>https://yinzhang.win/links/cfw/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/links/cfw/</guid><description> mixin</description></item><item><title>frp and its thinks</title><link>https://yinzhang.win/graphs/frp-and-its-thinks/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://yinzhang.win/graphs/frp-and-its-thinks/</guid><description>缘起 课题组远程访问内网服务器一直是一个需要解决的问题。去年，我们使用向日葵、花生壳等软件，由于各种限制最后都没有继续用下去。最后决定使用一台拥有公网 IP 的云服务器，配置 frp 服务，并实现多台内网服务器的远程 ssh 功能。
FRP 简介 frp 是一个专注于内网穿透的高性能反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。
通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网，同时提供诸多专业的功能特性，客户端服务端通信支持 TCP、KCP 以及 Websocket 等多种协议。</description></item></channel></rss>